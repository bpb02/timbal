"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1062],{3389:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>h,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"flows/index","title":"Overview","description":"Design, connect, and control multi-step AI pipelines using Flows\u2014Timbal\'s flexible workflow engine.","source":"@site/docs/flows/index.md","sourceDirName":"flows","slug":"/flows/","permalink":"/flows/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Overview","sidebar":"docsSidebar"},"sidebar":"docsSidebar","previous":{"title":"Evals","permalink":"/agents/evals"},"next":{"title":"Using Memory","permalink":"/flows/memory"}}');var i=t(4848),r=t(8453),l=t(5495);const o={title:"Overview",sidebar:"docsSidebar"},h="Orchestrating AI Workflows",a={},c=[{value:"What Are Flows?",id:"what-are-flows",level:2},{value:"Building Blocks of a Flow",id:"building-blocks-of-a-flow",level:2},{value:"Controlling Step Inputs",id:"controlling-step-inputs",level:2},{value:"Data Maps",id:"data-maps",level:3},{value:"Data Values",id:"data-values",level:3},{value:"Inputs and Outputs",id:"inputs-and-outputs",level:3},{value:"Example: Temperature Alert Flow",id:"example-temperature-alert-flow",level:3},{value:"Dynamic Data with String Interpolation",id:"dynamic-data-with-string-interpolation",level:2},{value:"Integrating LLMs",id:"integrating-llms",level:2},{value:"Enabling Memory and Finalizing Your Flow",id:"enabling-memory-and-finalizing-your-flow",level:2},{value:"Why compile?",id:"why-compile",level:3},{value:"How to enable memory?",id:"how-to-enable-memory",level:3},{value:"How to Run Your Flow",id:"how-to-run-your-flow",level:2},{value:"Quick Reference",id:"quick-reference",level:2}];function g(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"orchestrating-ai-workflows",children:"Orchestrating AI Workflows"})}),"\n",(0,i.jsx)("h2",{className:"subtitle",style:{marginTop:"-17px",fontSize:"1.1rem",fontWeight:"normal"},children:(0,i.jsx)(n.p,{children:"Design, connect, and control multi-step AI pipelines using Flows\u2014Timbal's flexible workflow engine."})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"what-are-flows",children:"What Are Flows?"}),"\n",(0,i.jsxs)(n.p,{children:["A ",(0,i.jsx)(n.strong,{children:"Flow"})," is a programmable pipeline that lets you chain together steps\u2014functions, LLMs, or even other flows\u2014while controlling how data moves between them. Flows enable you to build complex, intelligent workflows with clear logic, memory, and branching."]}),"\n",(0,i.jsx)(l.A,{language:"python",code:'from timbal import Flow\n\nflow = Flow(id="my_flow")'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"building-blocks-of-a-flow",children:"Building Blocks of a Flow"}),"\n",(0,i.jsxs)("div",{className:"cards-container",children:[(0,i.jsx)("div",{className:"card",children:(0,i.jsxs)("div",{className:"card-content",children:[(0,i.jsx)("h3",{children:"Steps"}),(0,i.jsxs)("p",{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)("strong",{children:"Steps"})," are the core units of work."]}),(0,i.jsx)(n.p,{children:"Each step can be:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"a function"}),"\n",(0,i.jsx)(n.li,{children:"a BaseStep"}),"\n",(0,i.jsx)(n.li,{children:"another flow."}),"\n"]}),(0,i.jsx)(n.p,{children:"Steps process data, perform actions, and pass results onward."})]})]})}),(0,i.jsx)("div",{className:"card",children:(0,i.jsxs)("div",{className:"card-content",children:[(0,i.jsx)("h3",{children:"Links"}),(0,i.jsxs)("p",{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)("strong",{children:"Links"})," define the order and dependencies between steps."]}),(0,i.jsx)(n.p,{children:"They control how data and execution flow from one step to another, and can be used for tool calls, tool results, and conditional branching."})]})]})})]}),"\n",(0,i.jsx)(l.A,{language:"python",code:'flow = (\n  Flow()\n  .add_step("step_1", handler_1)\n  .add_step("step_2", handler_2)\n  .add_link("step_1", "step_2")\n)'}),"\n",(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)("img",{src:"/img/dag_link.png",style:{width:"20rem"}})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"controlling-step-inputs",children:"Controlling Step Inputs"}),"\n",(0,i.jsx)(n.p,{children:"When building flows, you often need to control how each step receives its inputs. Timbal provides two powerful methods for this:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Maps"})," (",(0,i.jsx)(n.code,{children:"set_data_map"}),"): Dynamically connect a step's input to the output of another step or a flow input."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Values"})," (",(0,i.jsx)(n.code,{children:"set_data_value"}),"): Set a static value or template for a step's input."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-maps",children:"Data Maps"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"}),"\nConnect a step's input parameter to the output of another step, or to a flow input."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:'.set_data_map("step_name.parameter", "source")'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"step_name.parameter"}),": The input parameter of a step (e.g., ",(0,i.jsx)(n.code,{children:"check.fahrenheit"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"source"}),": The data key to use as the value. This can be:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The output of another step (e.g., ",(0,i.jsx)(n.code,{children:"to_fahrenheit.return"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["A flow input (e.g., ",(0,i.jsx)(n.code,{children:"input_x"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:'.set_data_map("to_fahrenheit.celsius", "get_temp.return")\n.set_data_map("check.fahrenheit", "to_fahrenheit.return")'}),"\n",(0,i.jsx)(n.p,{children:"This means:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"celsius"})," parameter of the ",(0,i.jsx)(n.code,{children:"to_fahrenheit"})," step receives the output of ",(0,i.jsx)(n.code,{children:"get_temp"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"fahrenheit"})," parameter of the ",(0,i.jsx)(n.code,{children:"check"})," step receives the output of ",(0,i.jsx)(n.code,{children:"to_fahrenheit"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-values",children:"Data Values"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"}),"\nSet a static value or template for a step's input."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Syntax:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:'.set_data_value("step_name.parameter", value)'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"step_name.parameter"}),": The input parameter of a step (e.g., ",(0,i.jsx)(n.code,{children:"check.threshold"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"value"}),": A constant (e.g., ",(0,i.jsx)(n.code,{children:"86"}),"), or a template string (e.g., ",(0,i.jsx)(n.code,{children:'"{{step_1.return}} and {{step_2.return}}"'}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:'.set_data_value("check.threshold", 86)'}),"\n",(0,i.jsx)(n.p,{children:"This means:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"threshold"})," parameter of the ",(0,i.jsx)(n.code,{children:"check"})," step will always be set to ",(0,i.jsx)(n.code,{children:"86"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"inputs-and-outputs",children:"Inputs and Outputs"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Inputs"})," and ",(0,i.jsx)(n.strong,{children:"outputs"})," in a flow are special cases of data mapping:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inputs"}),": Use ",(0,i.jsx)(n.code,{children:'.set_input("step.parameter", "input_name")'})," to specify that a step should receive its value from a flow input."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Outputs"}),": Use ",(0,i.jsx)(n.code,{children:'.set_output("step.return", "result_name")'})," to specify which step's output is returned by the flow."]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:['The output key will always be "',(0,i.jsx)(n.strong,{children:".return"}),'" (e.g., "to_fahrenheit.return"), since it refers to the return value of the step.']})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:'flow = (\n  Flow()\n  .add_step("to_fahrenheit", celsius_to_fahrenheit)\n  .set_input("to_fahrenheit.celsius", "input_celsius")  # input_celsius is a flow input\n  .set_output("to_fahrenheit.return", "fahrenheit")   # expose flow output\n)'}),"\n",(0,i.jsx)(n.p,{children:"This means:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The flow expects an input called ",(0,i.jsx)(n.code,{children:"input_celsius"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The output of ",(0,i.jsx)(n.code,{children:"to_fahrenheit"})," will be available as ",(0,i.jsx)(n.code,{children:"fahrenheit"})," in the flow's result."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-temperature-alert-flow",children:"Example: Temperature Alert Flow"}),"\n",(0,i.jsx)(l.A,{language:"python",code:'from timbal import Flow\n\ndef celsius_to_fahrenheit(celsius):\n  return celsius * 9 / 5 + 32\n\ndef check_threshold(fahrenheit, threshold):\n  if fahrenheit > threshold:\n      return "Alert: Temperature is too high!"\n  else:\n      return "Temperature is normal."\n\nflow = (\n  Flow()\n  .add_step("to_fahrenheit", celsius_to_fahrenheit)\n  .add_step("check", check_threshold)\n  # Map Celsius input parameter to the function\n  .set_input("to_fahrenheit.celsius", "input_celsius")\n  # Map Fahrenheit output to threshold checker\n  .set_data_map("check.fahrenheit", "to_fahrenheit.return")\n  # Set a static threshold value\n  .set_data_value("check.threshold", 86)\n  .set_output("check.return", "status")\n)\n\nasync def main():\n  result = await flow.complete(input_celsius=35)\n  print(result.output["status"])\n'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"dynamic-data-with-string-interpolation",children:"Dynamic Data with String Interpolation"}),"\n",(0,i.jsxs)(n.p,{children:["Template strings let you combine and transform outputs from multiple steps.",(0,i.jsx)(n.br,{}),"\n","This is especially useful for LLM prompts or merging results."]}),"\n",(0,i.jsx)(l.A,{language:"python",code:'from timbal import Flow\n\ndef get_first_name():\n  return "Alice"\n\ndef get_last_name():\n  return "Smith"\n\ndef check_full_name(full_name):\n  if full_name == "Alice Smith":\n      return "Welcome, Alice Smith!"\n  else:\n      return f"User {full_name} not recognized."\n\nflow = (\n  Flow()\n  .add_step("first_name", get_first_name)\n  .add_step("last_name", get_last_name)\n  .add_step("validate", check_full_name)\n  # Interpolate the outputs of first_name and last_name into a full name string\n  .set_data_value("validate.full_name", "{{first_name.return}} {{last_name.return}}")\n  .set_output("validate.return", "message")\n)\n\nasync def main():\n  result = await flow.complete()\n  print(result.output["message"])'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"integrating-llms",children:"Integrating LLMs"}),"\n",(0,i.jsx)(n.p,{children:"You can add LLMs (Large Language Models) as steps in your flow using .add_llm().\nLLMs can use memory, call tools, and be chained with other steps for advanced reasoning."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Memory"}),": Use the memory_id parameter to enable persistent context across runs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tool Use"}),": Connect LLMs to tools or functions using .add_link(..., is_tool=True) and .add_link(..., is_tool_result=True) for advanced workflows."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prompt Construction"}),": Use string interpolation to dynamically build prompts from previous step outputs."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Suppose you want to fetch an email, then have an LLM summarize it:"}),"\n",(0,i.jsx)(l.A,{language:"python",code:'from timbal import Flow\n\ndef get_email():\n  return "Hi team, let\'s meet tomorrow at 10am to discuss the project. Best, Alice"\n\nflow = (\n  Flow()\n  .add_step("fetch_email", get_email)\n  .add_llm("llm", model="gpt-4o-mini", memory_id="persistent_memory")\n  # Use string interpolation to build the prompt from the previous step\n  .set_data_value("llm.prompt", "Summarize this email: {{fetch_email.return}}")\n  .set_output("llm.return", "summary")\n)\n\nasync def main():\n  result = await flow.complete()\n  print(result.output["summary"].content[0].text)'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"What\u2019s happening here?"}),"*"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"fetch_email"})," retrieves the email text."]}),"\n",(0,i.jsx)(n.li,{children:"The LLM step receives a prompt that includes the email content."}),"\n",(0,i.jsx)(n.li,{children:"The LLM generates a summary, which is returned as the flow output."}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"You can chain multiple steps, use memory for context, and connect LLMs to external tools for even more powerful workflows."})}),"\n",(0,i.jsxs)(n.p,{children:["For more, see the ",(0,i.jsx)(n.a,{href:"/flows/advanced",children:"Advanced documentation"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"enabling-memory-and-finalizing-your-flow",children:"Enabling Memory and Finalizing Your Flow"}),"\n",(0,i.jsx)(n.p,{children:"To enable advanced features like persistent memory, you need to finalize your flow using the .compile() method."}),"\n",(0,i.jsx)(n.p,{children:"Compiling your flow validates its structure and (optionally) attaches a state saver for memory."}),"\n",(0,i.jsx)(n.h3,{id:"why-compile",children:"Why compile?"}),"\n",(0,i.jsx)(n.p,{children:"Compiling ensures your flow is ready for production, with all steps, data maps, and memory configured correctly."}),"\n",(0,i.jsx)(n.h3,{id:"how-to-enable-memory",children:"How to enable memory?"}),"\n",(0,i.jsx)(n.p,{children:"Pass a state saver (like InMemorySaver) to .compile() to persist context across runs."}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"/state",children:"State Savers"})," for more information."]}),"\n",(0,i.jsx)(l.A,{language:"python",code:'from timbal.state.savers import InMemorySaver\n\nflow = (\n  Flow()\n  .add_llm(memory_id="persistent_memory")\n  .compile(state_saver=InMemorySaver())\n)'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"how-to-run-your-flow",children:"How to Run Your Flow"}),"\n",(0,i.jsx)(n.p,{children:"Once your flow is defined and compiled, you can execute it in two main ways:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Get the final output:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:'result = await flow.complete(input_x=123)\nprint(result.output["result"])'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Stream events as they happen:"})}),"\n",(0,i.jsx)(l.A,{language:"python",code:"async for event in flow.run(input_x=123):\n  print(event)"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Steps"}),": Units of work (functions, LLMs, or flows)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Links"}),": Control execution and data flow"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data Maps/Values"}),": Connect and set step inputs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"String Interpolation"}),": Combine outputs flexibly"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LLMs"}),": Add language models as steps"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Inputs/Outputs"}),": Define what goes in and out of your flow"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"compile()"}),": Finalize and enable memory/state"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For more, see the ",(0,i.jsx)(n.a,{href:"/flows",children:"Flows documentation"}),", ",(0,i.jsx)(n.a,{href:"/flows/advanced",children:"Advanced Flow Concepts"}),", and ",(0,i.jsx)(n.a,{href:"/examples",children:"Examples"}),"."]}),"\n",(0,i.jsx)("style",{children:"\n.cards-container {\ndisplay: flex;\ngap: 1rem;\nmargin: 1rem 0;\nflex-wrap: wrap;\n}\n\n.card {\nflex: 1;\nmin-width: 300px;\nbackground: var(--ifm-background-color);\nborder-radius: 8px;\nbox-shadow: 0 2px 4px rgba(0,0,0,0.1);\noverflow: hidden;\n}\n\n.card-content {\npadding: 1.5rem;\n}\n\n.card-content h3 {\ncolor: var(--ifm-color-primary);\nmargin-top: 0;\nmargin-bottom: 1rem;\n}\n\n[data-theme='dark'] .card-content h3 {\ncolor: #9d7cff;\n}\n\n.card-content ul {\nlist-style: disc;\npadding-left: 1.2em;\nmargin: 0;\n}\n\n.card-content li {\nmargin: 0.5rem 0;\n}\n\n.capabilities {\ndisplay: flex;\nflex-direction: column;\ngap: 1.5rem;\nmargin: 2rem 0;\n}\n\n.capability {\ndisplay: flex;\nalign-items: flex-start;\ngap: 1.5rem;\npadding: 1.5rem;\nbackground: var(--ifm-background-color);\nborder-radius: 8px;\nbox-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.capability-icon {\nfont-size: 2rem;\nline-height: 1;\nflex-shrink: 0;\n}\n\n.capability-content {\nflex: 1;\n}\n\n.capability-content h3 {\ncolor: var(--ifm-font-color-base);\nmargin-top: 0;\nmargin-bottom: 0.5rem;\n}\n\n.capability-content p {\nmargin: 0;\nline-height: 1.5;\n}\n"})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},5495:(e,n,t)=>{t.d(n,{A:()=>c});var s=t(6540),i=t(1765),r=t(4848);(void 0!==t.g?t.g:window).Prism=i.My;const l={...i.Zj.github,plain:{...i.Zj.github.plain,backgroundColor:"#2d2d2d",color:"#ffffff"},styles:i.Zj.github.styles.map((e=>({...e,types:e.types})))},o={from:"custom-highlight-pink",import:"custom-highlight-pink",pass:"custom-highlight-pink","|":"custom-highlight-pink","=":"custom-highlight-pink","*":"custom-highlight-pink","/":"custom-highlight-pink","+":"custom-highlight-pink",timbal:"custom-highlight-green",Agent:"custom-highlight-green",steps:"custom-highlight-green",perplexity:"custom-highlight-green",InMemorySaver:"custom-highlight-green",fal:"custom-highlight-green",text_to_image:"custom-highlight-green",RunContext:"custom-highlight-green","@abstractmethod":"custom-highlight-green",put:"custom-highlight-green",get_last:"custom-highlight-green",abc:"custom-highlight-green",ABC:"custom-highlight-green",twilio:"custom-highlight-green",whatsapp:"custom-highlight-green",model:"custom-highlight-orange",None:"custom-highlight-purple",base:"custom-highlight-green",CustomSaver:"custom-highlight-green",BaseSaver:"custom-highlight-green",Snapshot:"custom-highlight-green",query:"custom-highlight-orange",context:"custom-highlight-orange",system_prompt:"custom-highlight-orange",tools:"custom-highlight-orange",parent_id:"custom-highlight-orange",id:"custom-highlight-orange",model_id:"custom-highlight-orange",to:"custom-highlight-orange",message:"custom-highlight-orange",resource:"custom-highlight-orange",self:"custom-highlight-orange",path:"custom-highlight-orange",snapshot:"custom-highlight-orange",max_results:"custom-highlight-orange",message_id:"custom-highlight-orange",thread_id:"custom-highlight-orange",subject:"custom-highlight-orange",body:"custom-highlight-orange",template_sid:"custom-highlight-orange",template_params:"custom-highlight-orange",scope:"custom-highlight-orange",folder:"custom-highlight-orange",destination:"custom-highlight-orange",text:"custom-highlight-orange",voice_id:"custom-highlight-orange",memory_id:"custom-highlight-orange",location:"custom-highlight-orange",celsius:"custom-highlight-orange",fahrenheit:"custom-highlight-orange",threshold:"custom-highlight-orange",full_name:"custom-highlight-orange",memory_window_size:"custom-highlight-orange","(":"custom-highlight-yellow-dark",")":"custom-highlight-yellow-dark","[":"custom-highlight-purple-pink","]":"custom-highlight-purple-pink","{":"custom-highlight-yellow-dark","}":"custom-highlight-yellow-dark",",":"#fffff",Flow:"custom-highlight-green",await:"custom-highlight-pink",as:"custom-highlight-pink",else:"custom-highlight-pink",def:"custom-highlight-blue",async:"custom-highlight-blue",class:"custom-highlight-blue","-":"#fffff",">":"#fffff",":":"#fffff",".":"#fffff",state:"custom-highlight-green",savers:"custom-highlight-green",sharepoint:"custom-highlight-green",Tool:"custom-highlight-green",list_directory:"custom-highlight-green-fn",get_first_name:"custom-highlight-green-fn",get_last_name:"custom-highlight-green-fn",check_full_name:"custom-highlight-green-fn",abstractmethod:"custom-highlight-green-fn",main:"custom-highlight-green-fn",gen_images:"custom-highlight-green-fn",download_file:"custom-highlight-green-fn",TimbalPlatformSaver:"custom-highlight-green",sql:"custom-highlight-green",postgres:"custom-highlight-green",return:"custom-highlight-pink",for:"custom-highlight-pink",in:"custom-highlight-pink",if:"custom-highlight-pink",datetime:"custom-highlight-green",elevenlabs:"custom-highlight-green",gmail:"custom-highlight-green",JSONLSaver:"custom-highlight-green",openai:"custom-highlight-green",messages:"custom-highlight-green",types:"custom-highlight-green",File:"custom-highlight-green",postgres_query:"custom-highlight-green-fn",PGConfig:"custom-highlight-green",get_message:"custom-highlight-green-fn",get_thread:"custom-highlight-green-fn",get_datetime:"custom-highlight-green-fn",send_message:"custom-highlight-green-fn",run_sql_query:"custom-highlight-green-fn",create_draft_message:"custom-highlight-green-fn",send_whatsapp_message:"custom-highlight-green-fn",send_whatsapp_template:"custom-highlight-green-fn",openai_stt:"custom-highlight-green-fn",elevenlabs_tts:"custom-highlight-green-fn",validate:"custom-highlight-green-fn",complete:"custom-highlight-green-fn",print:"custom-highlight-green-fn",search:"custom-highlight-green-fn",search_internet:"custom-highlight-green-fn",stt:"custom-highlight-green-fn",tts:"custom-highlight-green-fn",run:"custom-highlight-green-fn",search_web:"custom-highlight-green-fn",set_input:"custom-highlight-green-fn",extract_text:"custom-highlight-green-fn",text_processor:"custom-highlight-green-fn",convert_to_database:"custom-highlight-green-fn",get_weather:"custom-highlight-green-fn",get_time:"custom-highlight-green-fn",add_step:"custom-highlight-green-fn",add_link:"custom-highlight-green-fn",set_output:"custom-highlight-green-fn",set_data_map:"custom-highlight-green-fn",set_data_value:"custom-highlight-green-fn",get_temperature_celsius:"custom-highlight-green-fn",celsius_to_fahrenheit:"custom-highlight-green-fn",check_threshold:"custom-highlight-green-fn",parse_documentation:"custom-highlight-green-fn",create_database:"custom-highlight-green-fn",add_llm:"custom-highlight-green-fn",compile:"custom-highlight-green-fn",str:"custom-highlight-green"},h=new RegExp(`(${Object.keys(o).map((e=>/^[a-zA-Z0-9_]+$/.test(e)?`\\b${e}\\b`:e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"))).join("|")})`,"g"),a=/"([^"]*)"/g;function c(e){const{title:n,children:t,highlight:c}=e,[g,d]=(0,s.useState)(!1),u=c?c.split(",").map((e=>parseInt(e.trim()))):[];return(0,r.jsxs)("div",{className:"custom-codeblock-container",style:{borderRadius:"12px",overflow:"hidden",border:"1px solid #333",marginBottom:"1.5em",position:"relative"},children:[n&&(0,r.jsx)("div",{style:{background:"#2d2d2d",color:"#fff",padding:"0.3em 1em",fontSize:"0.85em",borderBottom:"1.5px solid #444",letterSpacing:"0.01em",display:"flex",justifyContent:"space-between",alignItems:"center"},children:(0,r.jsx)("span",{children:n})}),(0,r.jsx)("div",{style:{position:"relative"},children:(0,r.jsx)(i.f4,{theme:l,...e,children:t=>{let{className:s,style:i,tokens:l,getLineProps:c,getTokenProps:m}=t;const p=l.map((e=>e.map((e=>e.content)).join(""))).join("\n");let f=0,x=0,j=0,_=0;l.forEach((e=>{e.forEach((e=>{const n=m({token:e}).children;"string"==typeof n&&"state_saver"===n.trim()&&x++,"string"==typeof n&&"audio_file"===n.trim()&&j++,"string"==typeof n&&"db_config"===n.trim()&&_++,"string"==typeof n&&"sql"===n.trim()&&0}))}));let w=0,y=0,v=0,b=0,k=[];const S=e=>{const n=(e-1)%3;return 0===n?"custom-highlight-yellow-dark":1===n?{color:"#ff69b4"}:{color:"#42a5f5"}};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("button",{className:"copy-icon-btn"+(g?" copied":""),onClick:()=>{navigator.clipboard.writeText(p),d(!0),setTimeout((()=>d(!1)),2e3)},"aria-label":"Copy code",type:"button",style:{position:"absolute",top:n?16:12,right:"1em",zIndex:10,background:"rgba(30,30,30,0.7)",border:"none",borderRadius:"6px",padding:"4px",cursor:"pointer",pointerEvents:"auto",transition:"opacity 0.2s, background 0.2s"},children:g?(0,r.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,r.jsx)("path",{fill:"#fff",d:"m9.55 15.15l8.475-8.475q.3-.3.7-.3t.7.3t.3.713t-.3.712l-9.175 9.2q-.3.3-.7.3t-.7-.3L4.55 13q-.3-.3-.288-.712t.313-.713t.713-.3t.712.3z"})}):(0,r.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,r.jsxs)("g",{fill:"none",stroke:"#fff",strokeWidth:"1.5",children:[(0,r.jsx)("path",{d:"M6 11c0-2.828 0-4.243.879-5.121C7.757 5 9.172 5 12 5h3c2.828 0 4.243 0 5.121.879C21 6.757 21 8.172 21 11v5c0 2.828 0 4.243-.879 5.121C19.243 22 17.828 22 15 22h-3c-2.828 0-4.243 0-5.121-.879C6 20.243 6 18.828 6 16z"}),(0,r.jsx)("path",{d:"M6 19a3 3 0 0 1-3-3v-6c0-3.771 0-5.657 1.172-6.828S7.229 2 11 2h4a3 3 0 0 1 3 3"})]})})}),(0,r.jsx)("pre",{className:s,style:{...i,border:"none",borderRadius:0,color:"bash"===e.language?"#ffffff":i.color,margin:0,position:"relative"},children:l.map(((n,t)=>{const s=n.map((e=>m({token:e}).children)).join(""),i=u.includes(t+1),g={...c({line:n}).style,...i?{backgroundColor:"rgba(255, 255, 255, 0.1)",borderLeft:"3px solid #bcb6ff",paddingLeft:"8px",marginLeft:"-8px"}:{}};return/^\s*#/.test(s)?(0,r.jsx)("div",{...c({line:n}),style:g,children:n.map(((n,t)=>{const s=m({token:n});return(0,r.jsx)("span",{className:(e.language,"custom-highlight-comment"),children:s.children},t)}))},t):(0,r.jsxs)("div",{...c({line:n}),style:g,children:[n.map(((n,t)=>{const s=m({token:n});let i=s.children;if("bash"===e.language)return(0,r.jsx)("span",{style:{color:"#ffffff"},children:i},t);const l=[];let c,g=0;for(;null!==(c=a.exec(i));){if(c.index>g){let e=i.slice(g,c.index).replace(h,(e=>`<span class="${o[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),l.push(e)}l.push(`<span class="custom-highlight-yellow">${c[0]}</span>`),g=c.index+c[0].length}if(g<i.length){let e=i.slice(g).replace(h,(e=>`<span class="${o[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),l.push(e)}const d=l.join("");if("string"==typeof i&&"prompt"===i.trim())return f++,1===f?(0,r.jsx)("span",{className:"custom-highlight-orange",children:i},t):2===f?(0,r.jsx)("span",{style:{color:"#fff"},children:i},t):(0,r.jsx)("span",{...s},t);if("string"==typeof i&&"audio_file"===i.trim())return y++,3===j&&2===y?(0,r.jsx)("span",{className:"custom-highlight-orange",children:i},t):(0,r.jsx)("span",{...s},t);if("string"==typeof i&&"state_saver"===i.trim())return w++,1===x&&1===w||2===x&&1===w||3===x&&2===w?(0,r.jsx)("span",{className:"custom-highlight-orange",children:i},t):(0,r.jsx)("span",{...s},t);if("string"==typeof i&&"db_config"===i.trim())return v++,1===_&&1===v||2===_&&1===v||3===_&&2===v?(0,r.jsx)("span",{className:"custom-highlight-orange",children:i},t):(0,r.jsx)("span",{...s},t);if("string"==typeof i&&"sql"===i.trim())return b++,1===b?(0,r.jsx)("span",{className:"custom-highlight-green",children:i},t):2===b||3===b?(0,r.jsx)("span",{className:"custom-highlight-orange",children:i},t):(0,r.jsx)("span",{...s},t);if("("===i||"{"===i||"["===i){k.push(i);const e=k.length,n=S(e);return"string"==typeof n?(0,r.jsx)("span",{className:n,children:i},t):(0,r.jsx)("span",{style:n,children:i},t)}if(")"===i||"}"===i||"]"===i){const e=k.length,n=S(e);let s;s="string"==typeof n?(0,r.jsx)("span",{className:n,children:i},t):(0,r.jsx)("span",{style:n,children:i},t);const l=k[k.length-1];return(")"===i&&"("===l||"}"===i&&"{"===l||"]"===i&&"["===l)&&k.pop(),s}return d!==i?(0,r.jsx)("span",{dangerouslySetInnerHTML:{__html:d}},t):(0,r.jsx)("span",{...s},t)})),t===l.length-1&&(0,r.jsx)("span",{style:{display:"inline-block",width:"1em"}})]},t)}))})]})}})})]})}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);