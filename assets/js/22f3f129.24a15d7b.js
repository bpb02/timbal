"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5378],{5495:(e,t,n)=>{n.d(t,{A:()=>l});var i=n(6540),s=n(1765),h=n(4848);(void 0!==n.g?n.g:window).Prism=s.My;const o={...s.Zj.github,plain:{...s.Zj.github.plain,backgroundColor:"#2d2d2d",color:"#ffffff"},styles:s.Zj.github.styles.map((e=>({...e,types:e.types})))},r={from:"custom-highlight-pink",import:"custom-highlight-pink","=":"custom-highlight-pink",timbal:"custom-highlight-green",Agent:"custom-highlight-green",steps:"custom-highlight-green",perplexity:"custom-highlight-green",InMemorySaver:"custom-highlight-green",fal:"custom-highlight-green",text_to_image:"custom-highlight-green",RunContext:"custom-highlight-green",twilio:"custom-highlight-green",whatsapp:"custom-highlight-green",model:"custom-highlight-orange",query:"custom-highlight-orange",context:"custom-highlight-orange",system_prompt:"custom-highlight-orange",tools:"custom-highlight-orange",parent_id:"custom-highlight-orange",id:"custom-highlight-orange",model_id:"custom-highlight-orange",to:"custom-highlight-orange",message:"custom-highlight-orange",resource:"custom-highlight-orange",max_results:"custom-highlight-orange",message_id:"custom-highlight-orange",thread_id:"custom-highlight-orange",subject:"custom-highlight-orange",body:"custom-highlight-orange",template_sid:"custom-highlight-orange",template_params:"custom-highlight-orange",scope:"custom-highlight-orange",folder:"custom-highlight-orange",destination:"custom-highlight-orange",text:"custom-highlight-orange",voice_id:"custom-highlight-orange",memory_id:"custom-highlight-orange",location:"custom-highlight-orange",memory_window_size:"custom-highlight-orange","(":"custom-highlight-yellow-dark",")":"custom-highlight-yellow-dark","[":"custom-highlight-purple-pink","]":"custom-highlight-purple-pink","{":"custom-highlight-yellow-dark","}":"custom-highlight-yellow-dark",",":"#fffff",Flow:"custom-highlight-green",await:"custom-highlight-pink",as:"custom-highlight-pink",def:"custom-highlight-blue",async:"custom-highlight-blue","-":"#fffff",">":"#fffff",":":"#fffff",".":"#fffff",state:"custom-highlight-green",savers:"custom-highlight-green",sharepoint:"custom-highlight-green",Tool:"custom-highlight-green",list_directory:"custom-highlight-green-fn",gen_images:"custom-highlight-green-fn",download_file:"custom-highlight-green-fn",TimbalPlatformSaver:"custom-highlight-green",sql:"custom-highlight-green",postgres:"custom-highlight-green",return:"custom-highlight-pink",for:"custom-highlight-pink",in:"custom-highlight-pink",if:"custom-highlight-pink",datetime:"custom-highlight-green",elevenlabs:"custom-highlight-green",gmail:"custom-highlight-green",JSONLSaver:"custom-highlight-green",openai:"custom-highlight-green",messages:"custom-highlight-green",types:"custom-highlight-green",File:"custom-highlight-green",postgres_query:"custom-highlight-green-fn",PGConfig:"custom-highlight-green",get_message:"custom-highlight-green-fn",get_thread:"custom-highlight-green-fn",get_datetime:"custom-highlight-green-fn",send_message:"custom-highlight-green-fn",run_sql_query:"custom-highlight-green-fn",create_draft_message:"custom-highlight-green-fn",send_whatsapp_message:"custom-highlight-green-fn",send_whatsapp_template:"custom-highlight-green-fn",openai_stt:"custom-highlight-green-fn",elevenlabs_tts:"custom-highlight-green-fn",validate:"custom-highlight-green-fn",complete:"custom-highlight-green-fn",print:"custom-highlight-green-fn",search:"custom-highlight-green-fn",search_internet:"custom-highlight-green-fn",stt:"custom-highlight-green-fn",tts:"custom-highlight-green-fn",run:"custom-highlight-green-fn",search_web:"custom-highlight-green-fn",set_input:"custom-highlight-green-fn",extract_text:"custom-highlight-green-fn",text_processor:"custom-highlight-green-fn",convert_to_database:"custom-highlight-green-fn",get_weather:"custom-highlight-green-fn",get_time:"custom-highlight-green-fn",add_step:"custom-highlight-green-fn",add_link:"custom-highlight-green-fn",set_output:"custom-highlight-green-fn",parse_documentation:"custom-highlight-green-fn",create_database:"custom-highlight-green-fn",add_llm:"custom-highlight-green-fn",compile:"custom-highlight-green-fn",str:"custom-highlight-green"},g=new RegExp(`(${Object.keys(r).map((e=>/^[a-zA-Z0-9_]+$/.test(e)?`\\b${e}\\b`:e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"))).join("|")})`,"g"),a=/"([^"]*)"/g;function l(e){const{title:t,children:n,highlight:l}=e,[c,m]=(0,i.useState)(!1),u=l?l.split(",").map((e=>parseInt(e.trim()))):[];return(0,h.jsxs)("div",{className:"custom-codeblock-container",style:{borderRadius:"12px",overflow:"hidden",border:"1px solid #333",marginBottom:"1.5em",position:"relative"},children:[t&&(0,h.jsx)("div",{style:{background:"#2d2d2d",color:"#fff",padding:"0.3em 1em",fontSize:"0.85em",borderBottom:"1.5px solid #444",letterSpacing:"0.01em",display:"flex",justifyContent:"space-between",alignItems:"center"},children:(0,h.jsx)("span",{children:t})}),(0,h.jsx)(s.f4,{theme:o,...e,children:t=>{let{className:n,style:i,tokens:s,getLineProps:o,getTokenProps:l}=t;const d=s.map((e=>e.map((e=>e.content)).join(""))).join("\n");let p=0,f=0,x=0,y=0;s.forEach((e=>{e.forEach((e=>{const t=l({token:e}).children;"string"==typeof t&&"state_saver"===t.trim()&&f++,"string"==typeof t&&"audio_file"===t.trim()&&x++,"string"==typeof t&&"db_config"===t.trim()&&y++,"string"==typeof t&&"sql"===t.trim()&&0}))}));let w=0,j=0,b=0,_=0,v=[];const k=e=>{const t=(e-1)%3;return 0===t?"custom-highlight-yellow-dark":1===t?{color:"#ff69b4"}:{color:"#42a5f5"}};return(0,h.jsxs)("pre",{className:n,style:{...i,border:"none",borderRadius:0,color:"bash"===e.language?"#ffffff":i.color,margin:0,position:"relative"},children:[(0,h.jsx)("button",{className:"copy-icon-btn"+(c?" copied":""),onClick:()=>{navigator.clipboard.writeText(d),m(!0),setTimeout((()=>m(!1)),2e3)},"aria-label":"Copy code",type:"button",children:c?(0,h.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,h.jsx)("path",{fill:"#fff",d:"m9.55 15.15l8.475-8.475q.3-.3.7-.3t.7.3t.3.713t-.3.712l-9.175 9.2q-.3.3-.7.3t-.7-.3L4.55 13q-.3-.3-.288-.712t.313-.713t.713-.3t.712.3z"})}):(0,h.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,h.jsxs)("g",{fill:"none",stroke:"#fff",strokeWidth:"1.5",children:[(0,h.jsx)("path",{d:"M6 11c0-2.828 0-4.243.879-5.121C7.757 5 9.172 5 12 5h3c2.828 0 4.243 0 5.121.879C21 6.757 21 8.172 21 11v5c0 2.828 0 4.243-.879 5.121C19.243 22 17.828 22 15 22h-3c-2.828 0-4.243 0-5.121-.879C6 20.243 6 18.828 6 16z"}),(0,h.jsx)("path",{d:"M6 19a3 3 0 0 1-3-3v-6c0-3.771 0-5.657 1.172-6.828S7.229 2 11 2h4a3 3 0 0 1 3 3"})]})})}),s.map(((t,n)=>{const i=t.map((e=>l({token:e}).children)).join(""),s=u.includes(n+1),c={...o({line:t}).style,...s?{backgroundColor:"rgba(255, 255, 255, 0.1)",borderLeft:"3px solid #bcb6ff",paddingLeft:"8px",marginLeft:"-8px"}:{}};return/^\s*#/.test(i)?(0,h.jsx)("div",{...o({line:t}),style:c,children:t.map(((t,n)=>{const i=l({token:t});return(0,h.jsx)("span",{className:(e.language,"custom-highlight-comment"),children:i.children},n)}))},n):(0,h.jsx)("div",{...o({line:t}),style:c,children:t.map(((t,n)=>{const i=l({token:t});let s=i.children;if("bash"===e.language)return(0,h.jsx)("span",{style:{color:"#ffffff"},children:s},n);const o=[];let c,m=0;for(;null!==(c=a.exec(s));){if(c.index>m){let e=s.slice(m,c.index).replace(g,(e=>`<span class="${r[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),o.push(e)}o.push(`<span class="custom-highlight-yellow">${c[0]}</span>`),m=c.index+c[0].length}if(m<s.length){let e=s.slice(m).replace(g,(e=>`<span class="${r[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),o.push(e)}const u=o.join("");if("string"==typeof s&&"prompt"===s.trim())return p++,1===p?(0,h.jsx)("span",{className:"custom-highlight-orange",children:s},n):2===p?(0,h.jsx)("span",{style:{color:"#fff"},children:s},n):(0,h.jsx)("span",{...i},n);if("string"==typeof s&&"audio_file"===s.trim())return j++,3===x&&2===j?(0,h.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,h.jsx)("span",{...i},n);if("string"==typeof s&&"state_saver"===s.trim())return w++,1===f&&1===w||2===f&&1===w||3===f&&2===w?(0,h.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,h.jsx)("span",{...i},n);if("string"==typeof s&&"db_config"===s.trim())return b++,1===y&&1===b||2===y&&1===b||3===y&&2===b?(0,h.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,h.jsx)("span",{...i},n);if("string"==typeof s&&"sql"===s.trim())return _++,1===_?(0,h.jsx)("span",{className:"custom-highlight-green",children:s},n):2===_||3===_?(0,h.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,h.jsx)("span",{...i},n);if("("===s||"{"===s||"["===s){v.push(s);const e=v.length,t=k(e);return"string"==typeof t?(0,h.jsx)("span",{className:t,children:s},n):(0,h.jsx)("span",{style:t,children:s},n)}if(")"===s||"}"===s||"]"===s){const e=v.length,t=k(e);let i;i="string"==typeof t?(0,h.jsx)("span",{className:t,children:s},n):(0,h.jsx)("span",{style:t,children:s},n);const o=v[v.length-1];return(")"===s&&"("===o||"}"===s&&"{"===o||"]"===s&&"["===o)&&v.pop(),i}return u!==s?(0,h.jsx)("span",{dangerouslySetInnerHTML:{__html:u}},n):(0,h.jsx)("span",{...i},n)}))},n)}))]})}})]})}},7065:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>g,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"agents/rewind","title":"Rewind","description":"The rewind feature in Timbal allows you to branch or \\"rewind\\" the memory of an agent or flow by changing the parent_id in the RunContext. This is useful when you want to continue a conversation from a previous point, ignoring any newer context that was added after that point.","source":"@site/docs/agents/rewind.md","sourceDirName":"agents","slug":"/agents/rewind","permalink":"/agents/rewind","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Rewind","sidebar":"docsSidebar"},"sidebar":"docsSidebar","previous":{"title":"Adding Memory","permalink":"/agents/memory"},"next":{"title":"Tools","permalink":"/agents/tools"}}');var s=n(4848),h=n(8453),o=n(5495);const r={title:"Rewind",sidebar:"docsSidebar"},g="Rewind",a={},l=[{value:"How Rewind Works",id:"how-rewind-works",level:2},{value:"Example",id:"example",level:2},{value:"What happens under the hood?",id:"what-happens-under-the-hood",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,h.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"rewind",children:"Rewind"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"rewind"}),' feature in Timbal allows you to branch or "rewind" the memory of an agent or flow by changing the ',(0,s.jsx)(t.code,{children:"parent_id"})," in the ",(0,s.jsx)(t.code,{children:"RunContext"}),". This is useful when you want to continue a conversation from a previous point, ignoring any newer context that was added after that point."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"how-rewind-works",children:"How Rewind Works"}),"\n",(0,s.jsxs)(t.p,{children:["Normally, when you pass a ",(0,s.jsx)(t.code,{children:"parent_id"})," to a new ",(0,s.jsx)(t.code,{children:"RunContext"}),", the agent loads the memory up to that point. If you change the ",(0,s.jsx)(t.code,{children:"parent_id"})," to an earlier run, the agent will only have access to the memory up to that run, and ",(0,s.jsx)(t.strong,{children:"not"})," any of the memory added after."]}),"\n",(0,s.jsx)(t.p,{children:"This allows you to:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Branch the conversation from any previous point."}),"\n",(0,s.jsx)(t.li,{children:"Ignore or overwrite later context by starting from an earlier memory state."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.p,{children:"Let's see a practical example:"}),"\n",(0,s.jsx)(o.A,{language:"python",code:'from timbal import Agent\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\nagent = Agent(\n  model="gpt-4o-mini",\n  state_saver=InMemorySaver(),\n)\n\n# Step 1: Start the conversation\nrun1 = await agent.complete(prompt="Hello")\n# Memory: ["Hello"]\n\n# Step 2: Add a name\nrun2 = await agent.complete(\n  context=RunContext(parent_id=run1.run_id),\n  prompt="My name is David"\n)\n# Memory: ["Hello", "My name is David"]\n\n# Step 3: Ask for the name (normal forward memory)\nrun3 = await agent.complete(\n  context=RunContext(parent_id=run2.run_id),\n  prompt="What is my name?"\n)\nprint(run3.output.content[0].text)\n# Output: "Your name is David!"\n\n# Step 4: REWIND - branch from the first message, ignoring the \'David\' memory\nrun4 = await agent.complete(\n  context=RunContext(parent_id=run1.run_id),\n  prompt="What is my name?"\n)\nprint(run4.output.content[0].text)\n# The agent does NOT know your name, because it only sees the memory up to "Hello"'}),"\n",(0,s.jsx)(t.h2,{id:"what-happens-under-the-hood",children:"What happens under the hood?"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["When you set ",(0,s.jsx)(t.code,{children:"parent_id"})," to an earlier run, the agent loads only the memory up to that run."]}),"\n",(0,s.jsx)(t.li,{children:"Any context added after that run is ignored for this new branch."}),"\n",(0,s.jsx)(t.li,{children:'This is like "rewinding" the conversation and starting a new path from that point.'}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Visual Diagram"})}),"\n",(0,s.jsx)(o.A,{language:"bash",code:'Start \u2500\u2500\u25b6 "My name is David" \u2500\u2500\u25b6 "What is my name?" (\u2192 "Your name is David!")\n    \u2502\n    \u2514\u2500\u2500\u2500\u25b6 (rewind) "What is my name?" (\u2192 Agent does NOT know your name)'}),"\n",(0,s.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Rewind"})," lets you branch or restart the conversation from any previous point by changing the ",(0,s.jsx)(t.code,{children:"parent_id"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["The agent will only see the memory up to the specified ",(0,s.jsx)(t.code,{children:"parent_id"}),"."]}),"\n",(0,s.jsx)(t.li,{children:'This is useful for "what if" scenarios, testing, or branching conversations.'}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,h.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},h=i.createContext(s);function o(e){const t=i.useContext(h);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(h.Provider,{value:t},e.children)}}}]);