"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5891],{8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var l=s(6540);const t={},i=l.createContext(t);function a(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),l.createElement(i.Provider,{value:n},e.children)}},9599:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"concepts/advanced","title":"Advanced","description":"Welcome to the advanced concepts guide! Here you\'ll learn about the powerful features that make Timbal truly flexible and powerful. Let\'s dive in!","source":"@site/docs/concepts/advanced.md","sourceDirName":"concepts","slug":"/concepts/advanced","permalink":"/timbal/docs/concepts/advanced","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Advanced","sidebar":"docsSidebar"},"sidebar":"docsSidebar","previous":{"title":"Tools","permalink":"/timbal/docs/concepts/tools"},"next":{"title":"ElevenLabs","permalink":"/timbal/docs/tools/elevenlabs"}}');var t=s(4848),i=s(8453);const a={title:"Advanced",sidebar:"docsSidebar"},d="Advanced Timbal Concepts",r={},o=[{value:"Steps: The Building Blocks",id:"steps-the-building-blocks",level:2},{value:"1. Function-Based Steps",id:"1-function-based-steps",level:3},{value:"2. Built-in Timbal Steps",id:"2-built-in-timbal-steps",level:3},{value:"3. Custom Steps",id:"3-custom-steps",level:3},{value:"\ud83d\udd17 Conditional Flow Control",id:"-conditional-flow-control",level:2},{value:"Advanced Conditions",id:"advanced-conditions",level:3},{value:"Data Value Magic",id:"data-value-magic",level:2},{value:"Template Features",id:"template-features",level:3},{value:"Advanced Flow Patterns",id:"advanced-flow-patterns",level:2},{value:"1. Parallel Processing",id:"1-parallel-processing",level:3},{value:"2. Error Handling",id:"2-error-handling",level:3},{value:"3. Looping",id:"3-looping",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"advanced-timbal-concepts",children:"Advanced Timbal Concepts"})}),"\n",(0,t.jsx)(n.p,{children:"Welcome to the advanced concepts guide! Here you'll learn about the powerful features that make Timbal truly flexible and powerful. Let's dive in!"}),"\n",(0,t.jsx)(n.h2,{id:"steps-the-building-blocks",children:"Steps: The Building Blocks"}),"\n",(0,t.jsx)(n.p,{children:"Steps are the fundamental units of your flow. Think of them as Lego blocks that you can combine in creative ways!"}),"\n",(0,t.jsx)(n.h3,{id:"1-function-based-steps",children:"1. Function-Based Steps"}),"\n",(0,t.jsx)(n.p,{children:"The simplest way to create steps is using Python functions:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def identity_handler(x: Any = Field(default=None)) -> Any:\n    return x\n"})}),"\n",(0,t.jsxs)(n.admonition,{title:"Pro Tip",type:"tip",children:[(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.code,{children:"Field"})," is highly recommended because it:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Validates inputs and outputs automatically"}),"\n",(0,t.jsx)(n.li,{children:"Provides clear documentation for tool integration"}),"\n",(0,t.jsx)(n.li,{children:"Enables beautiful platform interfaces"}),"\n"]})]}),"\n",(0,t.jsx)(n.h3,{id:"2-built-in-timbal-steps",children:"2. Built-in Timbal Steps"}),"\n",(0,t.jsx)(n.p,{children:"Timbal provides specialized steps for common use cases:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"step = Step(handler_fn=identity_handler)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-custom-steps",children:"3. Custom Steps"}),"\n",(0,t.jsxs)(n.p,{children:["Create your own step classes by inheriting from ",(0,t.jsx)(n.code,{children:"BaseStep"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from timbal import BaseStep, BaseModel\nfrom typing import Any\n\nclass MyCustomStep(BaseStep):\n    def params_model(self) -> BaseModel:\n        # Define input parameters schema\n        pass\n    def params_model_schema(self) -> dict[str, Any]:\n        # Return JSON schema for parameters\n        pass\n    def return_model(self) -> BaseModel:\n        # Define return value schema\n        pass\n    def return_model_schema(self) -> dict[str, Any]:\n        # Return JSON schema for return value\n        pass\n    def run(self, kwargs: Any) -> Any:\n        # Implement step logic\n        pass\n"})}),"\n",(0,t.jsx)(n.h2,{id:"-conditional-flow-control",children:"\ud83d\udd17 Conditional Flow Control"}),"\n",(0,t.jsx)(n.p,{children:"Want to make your flows smarter? Use conditional links!"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'flow.add_link(\n    "step_1", \n    "step_2", \n    condition="step_1.return == \'Hello\'") # Magic condition!\n'})}),"\n",(0,t.jsx)(n.h3,{id:"advanced-conditions",children:"Advanced Conditions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Multiple conditions\nflow.add_link(\n    "step_1",\n    "step_2",\n    condition="step_1.return > 10 and step_1.status == \'success\'"\n)\n\n# Using functions\nflow.add_link(\n    "step_1",\n    "step_2",\n    condition=lambda x: x > 10\n)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"data-value-magic",children:"Data Value Magic"}),"\n",(0,t.jsx)(n.p,{children:"Combine and transform data between steps with template syntax:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'flow = (\n    Flow()\n    .add_step("step_1", identity_handler, x=1)\n    .add_step("step_2", identity_handler, x=2)\n    .add_step("step_3", identity_handler)\n    .set_data_value("step_3.x", "{{step_1.return}} {{step_2.return}}") # Input: "1 2"\n    .set_output("step_3_x", "step_3.x")\n    .set_output("step_3_return", "step_3.return")\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"template-features",children:"Template Features"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Basic Interpolation"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'"Hello {{name}}!"  # Simple variable\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Math Operations"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'"{{x + y}}"  # Addition\n"{{x * y}}"  # Multiplication\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"String Operations"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'"{{text.upper()}}"  # Uppercase\n"{{text.split()}}"  # Split string\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"advanced-flow-patterns",children:"Advanced Flow Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"1-parallel-processing",children:"1. Parallel Processing"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'flow = (\n    Flow()\n    .add_step("step_1", process_data)\n    .add_step("step_2", process_data)\n    .add_step("step_3", combine_results)\n    .add_link("step_1", "step_3")\n    .add_link("step_2", "step_3")\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-error-handling",children:"2. Error Handling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'flow = (\n    Flow()\n    .add_step("main_step", process_data)\n    .add_step("error_handler", handle_error)\n    .add_link("main_step", "error_handler", condition="main_step.status == \'error\'")\n)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"3-looping",children:"3. Looping"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'flow = (\n    Flow()\n    .add_step("start", initialize)\n    .add_step("process", process_item)\n    .add_step("check", check_condition)\n    .add_link("start", "process")\n    .add_link("process", "check")\n    .add_link("check", "process", condition="check.continue_loop")\n)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Step Design"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep steps focused and single-purpose"}),"\n",(0,t.jsx)(n.li,{children:"Use meaningful names"}),"\n",(0,t.jsx)(n.li,{children:"Document inputs and outputs"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Flow Organization"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Group related steps"}),"\n",(0,t.jsx)(n.li,{children:"Use clear naming conventions"}),"\n",(0,t.jsx)(n.li,{children:"Document complex flows"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Error Handling"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always handle potential errors"}),"\n",(0,t.jsx)(n.li,{children:"Use appropriate error messages"}),"\n",(0,t.jsx)(n.li,{children:"Implement fallback strategies"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Performance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Optimize step execution"}),"\n",(0,t.jsx)(n.li,{children:"Use parallel processing when possible"}),"\n",(0,t.jsx)(n.li,{children:"Monitor resource usage"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"Ready to take your Timbal skills to the next level? Check out:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/timbal/docs/concepts/flows",children:"Flows"}),": Master flow creation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"/timbal/docs/concepts/tools",children:"Tools"}),": Extend functionality"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);