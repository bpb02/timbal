"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1572],{2534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"state/index","title":"Overview","description":"Timbal provides a powerful state management system that enables your AI applications to maintain context, track conversations, and persist data across interactions.","source":"@site/docs/state/index.md","sourceDirName":"state","slug":"/state/","permalink":"/state/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Overview","sidebar":"docsSidebar"},"sidebar":"docsSidebar","previous":{"title":"Advanced Flow Concepts","permalink":"/flows/advanced"},"next":{"title":"Overview","permalink":"/integrations/"}}');var i=n(4848),a=n(8453),o=n(5495);const r={title:"Overview",sidebar:"docsSidebar"},l="State Management",h={},c=[{value:"What are Snapshots?",id:"what-are-snapshots",level:2},{value:"State Savers",id:"state-savers",level:2},{value:"1. InMemorySaver",id:"1-inmemorysaver",level:3},{value:"2. JSONLSaver",id:"2-jsonlsaver",level:3},{value:"3. TimbalPlatformSaver",id:"3-timbalplatformsaver",level:3},{value:"Creating Custom State Savers",id:"creating-custom-state-savers",level:2},{value:"How Snapshots Work",id:"how-snapshots-work",level:2},{value:"Working with Snapshots",id:"working-with-snapshots",level:2},{value:"1. Basic Conversation Memory",id:"1-basic-conversation-memory",level:3},{value:"2. File-based State Persistence",id:"2-file-based-state-persistence",level:3},{value:"3. Branching Conversations",id:"3-branching-conversations",level:3},{value:"4. Inspecting Snapshots",id:"4-inspecting-snapshots",level:3},{value:"5. Error Handling",id:"5-error-handling",level:3}];function g(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"state-management",children:"State Management"})}),"\n",(0,i.jsx)(t.p,{children:"Timbal provides a powerful state management system that enables your AI applications to maintain context, track conversations, and persist data across interactions."}),"\n",(0,i.jsx)(t.h2,{id:"what-are-snapshots",children:"What are Snapshots?"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.strong,{children:"Snapshot"})," is a complete record of a flow's execution at a specific point in time. Each time you run a flow, Timbal automatically creates snapshots that capture:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Input parameters"}),"\n",(0,i.jsx)(t.li,{children:"Output results"}),"\n",(0,i.jsx)(t.li,{children:"Execution time"}),"\n",(0,i.jsx)(t.li,{children:"Error states"}),"\n",(0,i.jsx)(t.li,{children:"Step-by-step execution data"}),"\n",(0,i.jsx)(t.li,{children:"Memory state"}),"\n",(0,i.jsx)(t.li,{children:"Resource usage"}),"\n"]}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Flow\nfrom timbal.state.savers import InMemorySaver\n\nflow = (\n  Flow()\n  .add_llm("chat", model="gpt-4.1-nano", memory_id="chat_memory")\n  .compile(state_saver=InMemorySaver())\n)\n\n# Each run creates a new snapshot\nresult = await flow.complete(prompt="Hello!")'}),"\n",(0,i.jsx)(t.h2,{id:"state-savers",children:"State Savers"}),"\n",(0,i.jsx)(t.p,{children:"State Savers determine where and how snapshots are stored. Timbal provides several built-in options:"}),"\n",(0,i.jsx)(t.h3,{id:"1-inmemorysaver",children:"1. InMemorySaver"}),"\n",(0,i.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",gap:"1rem",margin:"1rem 0"},children:[(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Stores snapshots in RAM"}),(0,i.jsx)("li",{children:"Perfect for development and testing"}),(0,i.jsx)("li",{children:"Data is lost when the program terminates"})]})}),(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsx)(o.A,{language:"python",code:"from timbal.state.savers import InMemorySaver\nstate_saver = InMemorySaver()"})})]}),"\n",(0,i.jsx)(t.h3,{id:"2-jsonlsaver",children:"2. JSONLSaver"}),"\n",(0,i.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",gap:"1rem",margin:"1rem 0"},children:[(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Stores snapshots in a JSONL file"}),(0,i.jsx)("li",{children:"Good for local development and debugging"}),(0,i.jsx)("li",{children:"Data persists between program runs"})]})}),(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsx)(o.A,{language:"python",code:'from timbal.state.savers import JSONLSaver\nstate_saver = JSONLSaver("snapshots.jsonl")'})})]}),"\n",(0,i.jsx)(t.h3,{id:"3-timbalplatformsaver",children:"3. TimbalPlatformSaver"}),"\n",(0,i.jsxs)("div",{style:{display:"flex",alignItems:"flex-start",gap:"1rem",margin:"1rem 0"},children:[(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Stores snapshots in the Timbal Platform"}),(0,i.jsx)("li",{children:"Ideal for production environments"}),(0,i.jsx)("li",{children:"Provides centralized storage and monitoring"})]})}),(0,i.jsx)("div",{style:{flex:1},children:(0,i.jsx)(o.A,{language:"python",code:"from timbal.state.savers import TimbalPlatformSaver\nstate_saver = TimbalPlatformSaver()"})})]}),"\n",(0,i.jsx)(t.h2,{id:"creating-custom-state-savers",children:"Creating Custom State Savers"}),"\n",(0,i.jsxs)(t.p,{children:["You can create your own state saver by implementing the ",(0,i.jsx)(t.code,{children:"BaseSaver"})," abstract class. This allows you to store snapshots in any backend of your choice (databases, cloud storage, etc.)."]}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from abc import ABC, abstractmethod\nfrom timbal.state.savers.base import BaseSaver\nfrom timbal.state import RunContext, Snapshot\n\nclass CustomSaver(BaseSaver):\n  @abstractmethod\n  def get_last(self, path: str, context: RunContext) -> Snapshot | None:\n      """Retrieve the last snapshot for a given path and context."""\n      pass\n\n  @abstractmethod\n  def put(self, snapshot: Snapshot, context: RunContext) -> None:\n      """Store a new snapshot."""\n      pass'}),"\n",(0,i.jsx)(t.h2,{id:"how-snapshots-work",children:"How Snapshots Work"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Creation"}),": Each time you run a flow, Timbal creates a snapshot that captures the complete state."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Storage"}),": The snapshot is passed to your configured state saver, which stores it according to its implementation."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Retrieval"}),": When running a flow with a parent context, Timbal automatically retrieves the last relevant snapshot to restore state."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Flow\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\nflow = (\n  Flow()\n  .add_llm("chat", model="gpt-4.1-nano", memory_id="chat_memory")\n  .compile(state_saver=InMemorySaver())\n)\n\n# First run creates a snapshot\nresult = await flow.complete(prompt="My name is David")\n\n# Second run retrieves the previous snapshot\nresult = await flow.complete(\n  context=RunContext(parent_id=result.run_id),\n  prompt="What\'s my name?"\n)'}),"\n",(0,i.jsx)(t.h2,{id:"working-with-snapshots",children:"Working with Snapshots"}),"\n",(0,i.jsx)(t.p,{children:"Here are some practical examples of how to work with state savers and snapshots:"}),"\n",(0,i.jsx)(t.h3,{id:"1-basic-conversation-memory",children:"1. Basic Conversation Memory"}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Agent\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\n# Create an agent with memory\nagent = Agent(\n  model="gpt-4o-mini",\n  state_saver=InMemorySaver()\n)\n\n# First interaction\nresult = await agent.complete(prompt="My name is David")\n\n# Second interaction with memory\nresult = await agent.complete(\n  context=RunContext(parent_id=result.run_id),\n  prompt="What\'s my name?"\n)\n\n# Check the snapshots\nprint(f"Number of snapshots: {len(agent.state_saver.snapshots)}")\nfor snapshot in agent.state_saver.snapshots:\n  print(f"Run ID: {snapshot.id}")\n  print(f"Memory size: {len(snapshot.data[\'memory\'].resolve())}")\n'}),"\n",(0,i.jsx)(t.h3,{id:"2-file-based-state-persistence",children:"2. File-based State Persistence"}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Flow\nfrom timbal.state import RunContext\nfrom timbal.state.savers import JSONLSaver\n\n# Create a flow with file-based state\nflow = (\n  Flow()\n  .add_llm(model="gpt-4o-mini", memory_id="chat")\n  .set_data_map("chat.prompt", "prompt")\n  .set_output("chat.return", "response")\n  .compile(state_saver=JSONLSaver("conversation.jsonl"))\n)\n\n# First run\nresult = await flow.complete(prompt="Hello, world!")\n\n# Second run with context\nresult = await flow.complete(\n  context=RunContext(parent_id=result.run_id),\n  prompt="What was my first message?"\n)\n\n# The conversation.jsonl file now contains both snapshots\n'}),"\n",(0,i.jsx)(t.h3,{id:"3-branching-conversations",children:"3. Branching Conversations"}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Flow\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\nflow = (\n  Flow()\n  .add_llm(model="gpt-4o-mini", memory_id="chat")\n  .set_data_map("chat.prompt", "prompt")\n  .set_output("chat.return", "response")\n  .compile(state_saver=InMemorySaver())\n)\n\n# Initial conversation\nresult1 = await flow.complete(prompt="Hello")\nresult2 = await flow.complete(\n  context=RunContext(parent_id=result1.run_id),\n  prompt="My name is David"\n)\n\n# Branch 1: Continue from result2\nresult3 = await flow.complete(\n  context=RunContext(parent_id=result2.run_id),\n  prompt="What\'s my name?"\n)\n\n# Branch 2: Start a new path from result1\nresult4 = await flow.complete(\n  context=RunContext(parent_id=result1.run_id),\n  prompt="My name is John"\n)\n\n# Each branch maintains its own context\n'}),"\n",(0,i.jsx)(t.h3,{id:"4-inspecting-snapshots",children:"4. Inspecting Snapshots"}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Flow\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\nflow = (\n  Flow()\n  .add_llm(model="gpt-4o-mini", memory_id="chat")\n  .compile(state_saver=InMemorySaver())\n)\n\n# Run the flow\nresult = await flow.complete(prompt="Hello!")\n\n# Get the last snapshot\nlast_snapshot = flow.state_saver.get_last(\n  path=flow.path,\n  context=RunContext(parent_id=result.run_id)\n)\n\n# Inspect snapshot details\nprint(f"Run ID: {last_snapshot.id}")\nprint(f"Parent ID: {last_snapshot.parent_id}")\nprint(f"Path: {last_snapshot.path}")\nprint(f"Input: {last_snapshot.input}")\nprint(f"Output: {last_snapshot.output}")\nprint(f"Execution time: {last_snapshot.t1 - last_snapshot.t0}ms")\nprint(f"Memory state: {last_snapshot.data}")\n'}),"\n",(0,i.jsx)(t.h3,{id:"5-error-handling",children:"5. Error Handling"}),"\n",(0,i.jsx)(o.A,{language:"python",code:'from timbal import Flow\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\nflow = (\n  Flow()\n  .add_llm(model="gpt-4o-mini", memory_id="chat")\n  .compile(state_saver=InMemorySaver())\n)\n\ntry:\n  # This will fail if the model is not available\n  result = await flow.complete(prompt="Hello!")\nexcept Exception as e:\n  # The error is captured in the snapshot\n  last_snapshot = flow.state_saver.get_last(\n      path=flow.path,\n      context=RunContext(parent_id=result.run_id)\n  )\n  print(f"Error type: {last_snapshot.error[\'type\']}")\n  print(f"Error message: {last_snapshot.error[\'message\']}")\n  print(f"Error traceback: {last_snapshot.error[\'traceback\']}")\n'}),"\n",(0,i.jsx)(t.p,{children:"These examples demonstrate how to:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Maintain conversation context"}),"\n",(0,i.jsx)(t.li,{children:"Persist state to files"}),"\n",(0,i.jsx)(t.li,{children:"Create branching conversations"}),"\n",(0,i.jsx)(t.li,{children:"Inspect snapshot details"}),"\n",(0,i.jsx)(t.li,{children:"Handle errors with state tracking"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["For more details on implementing custom state savers, see the ",(0,i.jsx)(t.a,{href:"https://github.com/timbal-ai/timbal/blob/main/python/timbal/state/snapshot.py",children:"Github documentation"}),"."]})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},5495:(e,t,n)=>{n.d(t,{A:()=>c});var s=n(6540),i=n(1765),a=n(4848);(void 0!==n.g?n.g:window).Prism=i.My;const o={...i.Zj.github,plain:{...i.Zj.github.plain,backgroundColor:"#2d2d2d",color:"#ffffff"},styles:i.Zj.github.styles.map((e=>({...e,types:e.types})))},r={from:"custom-highlight-pink",import:"custom-highlight-pink","=":"custom-highlight-pink",timbal:"custom-highlight-green",Agent:"custom-highlight-green",steps:"custom-highlight-green",perplexity:"custom-highlight-green",InMemorySaver:"custom-highlight-green",fal:"custom-highlight-green",text_to_image:"custom-highlight-green",RunContext:"custom-highlight-green",twilio:"custom-highlight-green",whatsapp:"custom-highlight-green",model:"custom-highlight-orange",query:"custom-highlight-orange",context:"custom-highlight-orange",system_prompt:"custom-highlight-orange",tools:"custom-highlight-orange",parent_id:"custom-highlight-orange",id:"custom-highlight-orange",model_id:"custom-highlight-orange",to:"custom-highlight-orange",message:"custom-highlight-orange",resource:"custom-highlight-orange",max_results:"custom-highlight-orange",message_id:"custom-highlight-orange",thread_id:"custom-highlight-orange",subject:"custom-highlight-orange",body:"custom-highlight-orange",template_sid:"custom-highlight-orange",template_params:"custom-highlight-orange",scope:"custom-highlight-orange",folder:"custom-highlight-orange",destination:"custom-highlight-orange",text:"custom-highlight-orange",voice_id:"custom-highlight-orange",memory_id:"custom-highlight-orange",location:"custom-highlight-orange",memory_window_size:"custom-highlight-orange","(":"custom-highlight-yellow-dark",")":"custom-highlight-yellow-dark","[":"custom-highlight-purple-pink","]":"custom-highlight-purple-pink","{":"custom-highlight-yellow-dark","}":"custom-highlight-yellow-dark",",":"#fffff",Flow:"custom-highlight-green",await:"custom-highlight-pink",as:"custom-highlight-pink",def:"custom-highlight-blue",async:"custom-highlight-blue","-":"#fffff",">":"#fffff",":":"#fffff",".":"#fffff",state:"custom-highlight-green",savers:"custom-highlight-green",sharepoint:"custom-highlight-green",Tool:"custom-highlight-green",list_directory:"custom-highlight-green-fn",gen_images:"custom-highlight-green-fn",download_file:"custom-highlight-green-fn",TimbalPlatformSaver:"custom-highlight-green",sql:"custom-highlight-green",postgres:"custom-highlight-green",return:"custom-highlight-pink",for:"custom-highlight-pink",in:"custom-highlight-pink",if:"custom-highlight-pink",datetime:"custom-highlight-green",elevenlabs:"custom-highlight-green",gmail:"custom-highlight-green",JSONLSaver:"custom-highlight-green",openai:"custom-highlight-green",messages:"custom-highlight-green",types:"custom-highlight-green",File:"custom-highlight-green",postgres_query:"custom-highlight-green-fn",PGConfig:"custom-highlight-green",get_message:"custom-highlight-green-fn",get_thread:"custom-highlight-green-fn",get_datetime:"custom-highlight-green-fn",send_message:"custom-highlight-green-fn",run_sql_query:"custom-highlight-green-fn",create_draft_message:"custom-highlight-green-fn",send_whatsapp_message:"custom-highlight-green-fn",send_whatsapp_template:"custom-highlight-green-fn",openai_stt:"custom-highlight-green-fn",elevenlabs_tts:"custom-highlight-green-fn",validate:"custom-highlight-green-fn",complete:"custom-highlight-green-fn",print:"custom-highlight-green-fn",search:"custom-highlight-green-fn",search_internet:"custom-highlight-green-fn",stt:"custom-highlight-green-fn",tts:"custom-highlight-green-fn",run:"custom-highlight-green-fn",search_web:"custom-highlight-green-fn",set_input:"custom-highlight-green-fn",extract_text:"custom-highlight-green-fn",text_processor:"custom-highlight-green-fn",convert_to_database:"custom-highlight-green-fn",get_weather:"custom-highlight-green-fn",get_time:"custom-highlight-green-fn",add_step:"custom-highlight-green-fn",add_link:"custom-highlight-green-fn",set_output:"custom-highlight-green-fn",parse_documentation:"custom-highlight-green-fn",create_database:"custom-highlight-green-fn",add_llm:"custom-highlight-green-fn",compile:"custom-highlight-green-fn",str:"custom-highlight-green"},l=new RegExp(`(${Object.keys(r).map((e=>/^[a-zA-Z0-9_]+$/.test(e)?`\\b${e}\\b`:e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"))).join("|")})`,"g"),h=/"([^"]*)"/g;function c(e){const{title:t,children:n,highlight:c}=e,[g,m]=(0,s.useState)(!1),p=c?c.split(",").map((e=>parseInt(e.trim()))):[];return(0,a.jsxs)("div",{className:"custom-codeblock-container",style:{borderRadius:"12px",overflow:"hidden",border:"1px solid #333",marginBottom:"1.5em",position:"relative"},children:[t&&(0,a.jsx)("div",{style:{background:"#2d2d2d",color:"#fff",padding:"0.3em 1em",fontSize:"0.85em",borderBottom:"1.5px solid #444",letterSpacing:"0.01em",display:"flex",justifyContent:"space-between",alignItems:"center"},children:(0,a.jsx)("span",{children:t})}),(0,a.jsx)(i.f4,{theme:o,...e,children:t=>{let{className:n,style:s,tokens:i,getLineProps:o,getTokenProps:c}=t;const d=i.map((e=>e.map((e=>e.content)).join(""))).join("\n");let u=0,f=0,x=0,v=0;i.forEach((e=>{e.forEach((e=>{const t=c({token:e}).children;"string"==typeof t&&"state_saver"===t.trim()&&f++,"string"==typeof t&&"audio_file"===t.trim()&&x++,"string"==typeof t&&"db_config"===t.trim()&&v++,"string"==typeof t&&"sql"===t.trim()&&0}))}));let y=0,w=0,j=0,b=0,_=[];const S=e=>{const t=(e-1)%3;return 0===t?"custom-highlight-yellow-dark":1===t?{color:"#ff69b4"}:{color:"#42a5f5"}};return(0,a.jsxs)("pre",{className:n,style:{...s,border:"none",borderRadius:0,color:"bash"===e.language?"#ffffff":s.color,margin:0,position:"relative"},children:[(0,a.jsx)("button",{className:"copy-icon-btn"+(g?" copied":""),onClick:()=>{navigator.clipboard.writeText(d),m(!0),setTimeout((()=>m(!1)),2e3)},"aria-label":"Copy code",type:"button",children:g?(0,a.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,a.jsx)("path",{fill:"#fff",d:"m9.55 15.15l8.475-8.475q.3-.3.7-.3t.7.3t.3.713t-.3.712l-9.175 9.2q-.3.3-.7.3t-.7-.3L4.55 13q-.3-.3-.288-.712t.313-.713t.713-.3t.712.3z"})}):(0,a.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,a.jsxs)("g",{fill:"none",stroke:"#fff",strokeWidth:"1.5",children:[(0,a.jsx)("path",{d:"M6 11c0-2.828 0-4.243.879-5.121C7.757 5 9.172 5 12 5h3c2.828 0 4.243 0 5.121.879C21 6.757 21 8.172 21 11v5c0 2.828 0 4.243-.879 5.121C19.243 22 17.828 22 15 22h-3c-2.828 0-4.243 0-5.121-.879C6 20.243 6 18.828 6 16z"}),(0,a.jsx)("path",{d:"M6 19a3 3 0 0 1-3-3v-6c0-3.771 0-5.657 1.172-6.828S7.229 2 11 2h4a3 3 0 0 1 3 3"})]})})}),i.map(((t,n)=>{const s=t.map((e=>c({token:e}).children)).join(""),i=p.includes(n+1),g={...o({line:t}).style,...i?{backgroundColor:"rgba(255, 255, 255, 0.1)",borderLeft:"3px solid #bcb6ff",paddingLeft:"8px",marginLeft:"-8px"}:{}};return/^\s*#/.test(s)?(0,a.jsx)("div",{...o({line:t}),style:g,children:t.map(((t,n)=>{const s=c({token:t});return(0,a.jsx)("span",{className:(e.language,"custom-highlight-comment"),children:s.children},n)}))},n):(0,a.jsx)("div",{...o({line:t}),style:g,children:t.map(((t,n)=>{const s=c({token:t});let i=s.children;if("bash"===e.language)return(0,a.jsx)("span",{style:{color:"#ffffff"},children:i},n);const o=[];let g,m=0;for(;null!==(g=h.exec(i));){if(g.index>m){let e=i.slice(m,g.index).replace(l,(e=>`<span class="${r[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),o.push(e)}o.push(`<span class="custom-highlight-yellow">${g[0]}</span>`),m=g.index+g[0].length}if(m<i.length){let e=i.slice(m).replace(l,(e=>`<span class="${r[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),o.push(e)}const p=o.join("");if("string"==typeof i&&"prompt"===i.trim())return u++,1===u?(0,a.jsx)("span",{className:"custom-highlight-orange",children:i},n):2===u?(0,a.jsx)("span",{style:{color:"#fff"},children:i},n):(0,a.jsx)("span",{...s},n);if("string"==typeof i&&"audio_file"===i.trim())return w++,3===x&&2===w?(0,a.jsx)("span",{className:"custom-highlight-orange",children:i},n):(0,a.jsx)("span",{...s},n);if("string"==typeof i&&"state_saver"===i.trim())return y++,1===f&&1===y||2===f&&1===y||3===f&&2===y?(0,a.jsx)("span",{className:"custom-highlight-orange",children:i},n):(0,a.jsx)("span",{...s},n);if("string"==typeof i&&"db_config"===i.trim())return j++,1===v&&1===j||2===v&&1===j||3===v&&2===j?(0,a.jsx)("span",{className:"custom-highlight-orange",children:i},n):(0,a.jsx)("span",{...s},n);if("string"==typeof i&&"sql"===i.trim())return b++,1===b?(0,a.jsx)("span",{className:"custom-highlight-green",children:i},n):2===b||3===b?(0,a.jsx)("span",{className:"custom-highlight-orange",children:i},n):(0,a.jsx)("span",{...s},n);if("("===i||"{"===i||"["===i){_.push(i);const e=_.length,t=S(e);return"string"==typeof t?(0,a.jsx)("span",{className:t,children:i},n):(0,a.jsx)("span",{style:t,children:i},n)}if(")"===i||"}"===i||"]"===i){const e=_.length,t=S(e);let s;s="string"==typeof t?(0,a.jsx)("span",{className:t,children:i},n):(0,a.jsx)("span",{style:t,children:i},n);const o=_[_.length-1];return(")"===i&&"("===o||"}"===i&&"{"===o||"]"===i&&"["===o)&&_.pop(),s}return p!==i?(0,a.jsx)("span",{dangerouslySetInnerHTML:{__html:p}},n):(0,a.jsx)("span",{...s},n)}))},n)}))]})}})]})}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(6540);const i={},a=s.createContext(i);function o(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);