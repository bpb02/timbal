"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1677],{3415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"agents/memory","title":"Adding Memory","description":"Memory in Timbal is implemented through state savers, which allow agents to maintain context across multiple interactions. This is achieved through a combination of state savers and run contexts.","source":"@site/docs/agents/memory.md","sourceDirName":"agents","slug":"/agents/memory","permalink":"/agents/memory","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Adding Memory","sidebar":"docsSidebar"},"sidebar":"docsSidebar","previous":{"title":"Overview","permalink":"/agents/"},"next":{"title":"Rewind","permalink":"/agents/rewind"}}');var s=n(4848),o=n(8453),h=n(5495);const r={title:"Adding Memory",sidebar:"docsSidebar"},a="Using Memory in Agents",l={},g=[{value:"State Savers",id:"state-savers",level:2},{value:"Run Context and Memory Chain",id:"run-context-and-memory-chain",level:2},{value:"How Memory Works",id:"how-memory-works",level:2},{value:"Memory Chain Visualization",id:"memory-chain-visualization",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"using-memory-in-agents",children:"Using Memory in Agents"})}),"\n",(0,s.jsxs)(t.p,{children:["Memory in Timbal is implemented through state savers, which allow agents to maintain context across multiple interactions. This is achieved through a combination of ",(0,s.jsx)("span",{style:{color:"var(--timbal-purple)"},children:(0,s.jsx)("strong",{children:"state savers"})})," and ",(0,s.jsx)("span",{style:{color:"var(--timbal-purple)"},children:(0,s.jsx)("strong",{children:"run contexts"})}),"."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"state-savers",children:"State Savers"}),"\n",(0,s.jsx)(t.p,{children:"State savers are responsible for persisting the agent's state across multiple interactions. They store snapshots of the agent's state, including:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Input/output messages"}),"\n",(0,s.jsx)(t.li,{children:"Memory content"}),"\n",(0,s.jsx)(t.li,{children:"Run metadata (timestamps, usage statistics)"}),"\n",(0,s.jsx)(t.li,{children:"Error information (if any)"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The most basic state saver is the ",(0,s.jsx)(t.code,{children:"InMemorySaver"}),", which stores everything in memory. Here's how to use it:"]}),"\n",(0,s.jsx)(h.A,{language:"python",highlight:"7",code:'from timbal import Agent\nfrom timbal.state.savers import InMemorySaver\n\n# Initialize agent with memory\nagent = Agent(\n  model="gpt-4o-mini",\n  state_saver=InMemorySaver(),\n)'}),"\n",(0,s.jsx)(t.h2,{id:"run-context-and-memory-chain",children:"Run Context and Memory Chain"}),"\n",(0,s.jsxs)(t.p,{children:["Memory is maintained through a chain of run contexts, where each interaction is linked to its previous one through a ",(0,s.jsx)(t.code,{children:"parent_id"}),". This creates a traceable history of conversations."]}),"\n",(0,s.jsx)(t.p,{children:"Here's a complete example showing how memory works:"}),"\n",(0,s.jsx)(h.A,{language:"python",highlight:"8,12,14,19,21",code:'from timbal import Agent\nfrom timbal.state import RunContext\nfrom timbal.state.savers import InMemorySaver\n\n# Initialize agent with memory\nagent = Agent(\n  model="gpt-4o-mini",\n  state_saver=InMemorySaver(),\n)\n\n# First interaction - no parent context\nrun_context = RunContext()\nflow_output_event = await agent.complete(\n  context=run_context,\n  prompt="My name is David"\n)\n\n# Second interaction - using parent context\nrun_context = RunContext(parent_id=flow_output_event.run_id)\nflow_output_event = await agent.complete(\n  context=run_context,\n  prompt="What\'s my name?"\n)'}),"\n",(0,s.jsxs)(t.p,{children:["The agent responded with ",(0,s.jsx)(t.em,{children:'"Your name is David"'})," because it has access to the previous context."]}),"\n",(0,s.jsx)(t.p,{children:"Let's take a closer look at the registers:"}),"\n",(0,s.jsx)("div",{className:"log-step-static",children:(0,s.jsx)(t.p,{children:"StartEvent(..., path='agent', ...)"})}),"\n",(0,s.jsx)("div",{className:"log-step-static",children:(0,s.jsx)(t.p,{children:"StartEvent(..., path='agent.llm-0', ...)"})}),"\n",(0,s.jsxs)(n,{className:"log-step-collapsible",children:[(0,s.jsx)("summary",{children:(0,s.jsx)(t.p,{children:"OutputEvent(..., path='agent.llm-0', ...)"})}),(0,s.jsx)(h.A,{language:"bash",code:"OutputEvent(..., \n  path='agent.llm-0',\n  input={\n      'messages': [Message(\n              role=user,\n              content=[TextContent(\n                  type='text',\n                  text='My name is David'\n              )]\n      )], \n      'model': 'gpt-4o-mini',\n      ...\n  },\n  output=Message(\n      role=assistant, \n      content=[TextContent(\n          type='text', \n          text='Nice to meet you, David! How can I assist you today?'\n      )]\n  )\n  ...\n)"})]}),"\n",(0,s.jsxs)(n,{className:"log-step-collapsible",children:[(0,s.jsx)("summary",{children:(0,s.jsx)(t.p,{children:"OutputEvent(..., path='agent', ...)"})}),(0,s.jsx)(h.A,{language:"bash",code:"OutputEvent(...,\n  path='agent', \n  input={\n      'prompt': {\n          'role': 'user', \n          'content': [{'type': 'text', 'text': 'My name is David'}]\n      }\n  },\n  output=Message(\n      role=assistant, \n      content=[TextContent(\n          type='text', \n          text='Nice to meet you, David! How can I assist you today?'\n      )]\n  ), \n  ...\n)"})]}),"\n",(0,s.jsx)("div",{className:"log-step-static",children:(0,s.jsx)(t.p,{children:"StartEvent(..., path='agent', ...')"})}),"\n",(0,s.jsx)("div",{className:"log-step-static",children:(0,s.jsx)(t.p,{children:"StartEvent(..., path='agent.llm-0', ...')"})}),"\n",(0,s.jsxs)(n,{className:"log-step-collapsible",children:[(0,s.jsx)("summary",{children:(0,s.jsx)(t.p,{children:"OutputEvent(..., path='agent.llm-0', ...)"})}),(0,s.jsx)(h.A,{language:"bash",code:"OutputEvent(..., \n  path='agent.llm-0',\n  input={\n      'messages': [\n          Message(\n              role=user, \n              content=[TextContent(type='text', text='My name is David')]\n          ),\n          Message(\n              role=assistant, \n              content=[TextContent(\n                  type='text', \n                  text='Nice to meet you, David! How can I assist you today?'\n              )]\n          ),\n          Message(\n              role=user,\n              content=[TextContent(type='text', text=\"What's my name?\")]\n          )\n      ],\n      'model': 'gpt-4o-mini', \n      ...\n  },\n  output=Message(\n      role=assistant, \n      content=[TextContent(type='text', text='Your name is David! How can I help you today?')]\n  ), ...\n)"})]}),"\n",(0,s.jsxs)(n,{className:"log-step-collapsible",children:[(0,s.jsx)("summary",{children:(0,s.jsx)(t.p,{children:"OutputEvent(..., path='agent', ...)"})}),(0,s.jsx)(h.A,{language:"bash",code:"OutputEvent(...,\n  path='agent',\n  input={\n      'prompt': {\n          'role': 'user', \n          'content': [{'type': 'text', 'text': \"What's my name?\"}]\n      }\n  }, \n  output=Message(\n      role=assistant, \n      content=[TextContent(type='text', text='Your name is David! How can I help you today?')]\n  ),\n  ...\n)"})]}),"\n",(0,s.jsx)(t.h2,{id:"how-memory-works",children:"How Memory Works"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Run ID"}),": Each interaction gets a unique ",(0,s.jsx)(t.code,{children:"run_id"})," that identifies that specific interaction."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Parent ID"}),": When you want to maintain context, you create a new ",(0,s.jsx)(t.code,{children:"RunContext"})," with the ",(0,s.jsx)(t.code,{children:"parent_id"})," set to the previous interaction's ",(0,s.jsx)(t.code,{children:"run_id"}),". This creates a chain of memory."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Memory Loading"}),": When an agent receives a request with a ",(0,s.jsx)(t.code,{children:"parent_id"}),", it:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Loads the previous state from the state saver"}),"\n",(0,s.jsx)(t.li,{children:"Includes that context in the current interaction"}),"\n",(0,s.jsx)(t.li,{children:"Maintains the conversation history"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"memory-chain-visualization",children:"Memory Chain Visualization"}),"\n",(0,s.jsx)(h.A,{language:"bash",highlight:"2,4,6",code:'\nInteraction 1 (run_id: abc123)\n\u2514\u2500\u2500 "My name is David and I live in Barcelona"\n  \u2514\u2500\u2500 Interaction 2 (run_id: def456, parent_id: abc123)\n      \u2514\u2500\u2500 "Where do I live?"\n          \u2514\u2500\u2500 Interaction 3 (run_id: ghi789, parent_id: def456)\n              \u2514\u2500\u2500 "And what\'s my name?"'}),"\n",(0,s.jsxs)(t.p,{children:["Each interaction maintains its connection to the previous one through the ",(0,s.jsx)(t.code,{children:"parent_id"}),", creating a chain of memory that allows the agent to maintain context throughout the conversation."]}),"\n",(0,s.jsxs)(t.p,{children:["For more information about different types of state savers and their implementations, check out the ",(0,s.jsx)(t.a,{href:"/state",children:"State documentation"}),"."]})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},5495:(e,t,n)=>{n.d(t,{A:()=>g});var i=n(6540),s=n(1765),o=n(4848);(void 0!==n.g?n.g:window).Prism=s.My;const h={...s.Zj.github,plain:{...s.Zj.github.plain,backgroundColor:"#2d2d2d",color:"#ffffff"},styles:s.Zj.github.styles.map((e=>({...e,types:e.types})))},r={from:"custom-highlight-pink",import:"custom-highlight-pink","=":"custom-highlight-pink",timbal:"custom-highlight-green",Agent:"custom-highlight-green",steps:"custom-highlight-green",perplexity:"custom-highlight-green",InMemorySaver:"custom-highlight-green",fal:"custom-highlight-green",text_to_image:"custom-highlight-green",RunContext:"custom-highlight-green",twilio:"custom-highlight-green",whatsapp:"custom-highlight-green",model:"custom-highlight-orange",query:"custom-highlight-orange",context:"custom-highlight-orange",system_prompt:"custom-highlight-orange",tools:"custom-highlight-orange",parent_id:"custom-highlight-orange",id:"custom-highlight-orange",model_id:"custom-highlight-orange",to:"custom-highlight-orange",message:"custom-highlight-orange",resource:"custom-highlight-orange",max_results:"custom-highlight-orange",message_id:"custom-highlight-orange",thread_id:"custom-highlight-orange",subject:"custom-highlight-orange",body:"custom-highlight-orange",template_sid:"custom-highlight-orange",template_params:"custom-highlight-orange",scope:"custom-highlight-orange",folder:"custom-highlight-orange",destination:"custom-highlight-orange",text:"custom-highlight-orange",voice_id:"custom-highlight-orange",memory_id:"custom-highlight-orange",location:"custom-highlight-orange",memory_window_size:"custom-highlight-orange","(":"custom-highlight-yellow-dark",")":"custom-highlight-yellow-dark","[":"custom-highlight-purple-pink","]":"custom-highlight-purple-pink","{":"custom-highlight-yellow-dark","}":"custom-highlight-yellow-dark",",":"#fffff",Flow:"custom-highlight-green",await:"custom-highlight-pink",as:"custom-highlight-pink",def:"custom-highlight-blue",async:"custom-highlight-blue","-":"#fffff",">":"#fffff",":":"#fffff",".":"#fffff",state:"custom-highlight-green",savers:"custom-highlight-green",sharepoint:"custom-highlight-green",Tool:"custom-highlight-green",list_directory:"custom-highlight-green-fn",gen_images:"custom-highlight-green-fn",download_file:"custom-highlight-green-fn",TimbalPlatformSaver:"custom-highlight-green",sql:"custom-highlight-green",postgres:"custom-highlight-green",return:"custom-highlight-pink",for:"custom-highlight-pink",in:"custom-highlight-pink",if:"custom-highlight-pink",datetime:"custom-highlight-green",elevenlabs:"custom-highlight-green",gmail:"custom-highlight-green",JSONLSaver:"custom-highlight-green",openai:"custom-highlight-green",messages:"custom-highlight-green",types:"custom-highlight-green",File:"custom-highlight-green",postgres_query:"custom-highlight-green-fn",PGConfig:"custom-highlight-green",get_message:"custom-highlight-green-fn",get_thread:"custom-highlight-green-fn",get_datetime:"custom-highlight-green-fn",send_message:"custom-highlight-green-fn",run_sql_query:"custom-highlight-green-fn",create_draft_message:"custom-highlight-green-fn",send_whatsapp_message:"custom-highlight-green-fn",send_whatsapp_template:"custom-highlight-green-fn",openai_stt:"custom-highlight-green-fn",elevenlabs_tts:"custom-highlight-green-fn",validate:"custom-highlight-green-fn",complete:"custom-highlight-green-fn",print:"custom-highlight-green-fn",search:"custom-highlight-green-fn",search_internet:"custom-highlight-green-fn",stt:"custom-highlight-green-fn",tts:"custom-highlight-green-fn",run:"custom-highlight-green-fn",search_web:"custom-highlight-green-fn",set_input:"custom-highlight-green-fn",extract_text:"custom-highlight-green-fn",text_processor:"custom-highlight-green-fn",convert_to_database:"custom-highlight-green-fn",get_weather:"custom-highlight-green-fn",get_time:"custom-highlight-green-fn",add_step:"custom-highlight-green-fn",add_link:"custom-highlight-green-fn",set_output:"custom-highlight-green-fn",parse_documentation:"custom-highlight-green-fn",create_database:"custom-highlight-green-fn",add_llm:"custom-highlight-green-fn",compile:"custom-highlight-green-fn",str:"custom-highlight-green"},a=new RegExp(`(${Object.keys(r).map((e=>/^[a-zA-Z0-9_]+$/.test(e)?`\\b${e}\\b`:e.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&"))).join("|")})`,"g"),l=/"([^"]*)"/g;function g(e){const{title:t,children:n,highlight:g}=e,[c,m]=(0,i.useState)(!1),u=g?g.split(",").map((e=>parseInt(e.trim()))):[];return(0,o.jsxs)("div",{className:"custom-codeblock-container",style:{borderRadius:"12px",overflow:"hidden",border:"1px solid #333",marginBottom:"1.5em",position:"relative"},children:[t&&(0,o.jsx)("div",{style:{background:"#2d2d2d",color:"#fff",padding:"0.3em 1em",fontSize:"0.85em",borderBottom:"1.5px solid #444",letterSpacing:"0.01em",display:"flex",justifyContent:"space-between",alignItems:"center"},children:(0,o.jsx)("span",{children:t})}),(0,o.jsx)(s.f4,{theme:h,...e,children:t=>{let{className:n,style:i,tokens:s,getLineProps:h,getTokenProps:g}=t;const d=s.map((e=>e.map((e=>e.content)).join(""))).join("\n");let p=0,x=0,f=0,y=0;s.forEach((e=>{e.forEach((e=>{const t=g({token:e}).children;"string"==typeof t&&"state_saver"===t.trim()&&x++,"string"==typeof t&&"audio_file"===t.trim()&&f++,"string"==typeof t&&"db_config"===t.trim()&&y++,"string"==typeof t&&"sql"===t.trim()&&0}))}));let j=0,v=0,b=0,_=0,w=[];const k=e=>{const t=(e-1)%3;return 0===t?"custom-highlight-yellow-dark":1===t?{color:"#ff69b4"}:{color:"#42a5f5"}};return(0,o.jsxs)("pre",{className:n,style:{...i,border:"none",borderRadius:0,color:"bash"===e.language?"#ffffff":i.color,margin:0,position:"relative"},children:[(0,o.jsx)("button",{className:"copy-icon-btn"+(c?" copied":""),onClick:()=>{navigator.clipboard.writeText(d),m(!0),setTimeout((()=>m(!1)),2e3)},"aria-label":"Copy code",type:"button",children:c?(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,o.jsx)("path",{fill:"#fff",d:"m9.55 15.15l8.475-8.475q.3-.3.7-.3t.7.3t.3.713t-.3.712l-9.175 9.2q-.3.3-.7.3t-.7-.3L4.55 13q-.3-.3-.288-.712t.313-.713t.713-.3t.712.3z"})}):(0,o.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"18",height:"18",viewBox:"0 0 24 24",children:(0,o.jsxs)("g",{fill:"none",stroke:"#fff",strokeWidth:"1.5",children:[(0,o.jsx)("path",{d:"M6 11c0-2.828 0-4.243.879-5.121C7.757 5 9.172 5 12 5h3c2.828 0 4.243 0 5.121.879C21 6.757 21 8.172 21 11v5c0 2.828 0 4.243-.879 5.121C19.243 22 17.828 22 15 22h-3c-2.828 0-4.243 0-5.121-.879C6 20.243 6 18.828 6 16z"}),(0,o.jsx)("path",{d:"M6 19a3 3 0 0 1-3-3v-6c0-3.771 0-5.657 1.172-6.828S7.229 2 11 2h4a3 3 0 0 1 3 3"})]})})}),s.map(((t,n)=>{const i=t.map((e=>g({token:e}).children)).join(""),s=u.includes(n+1),c={...h({line:t}).style,...s?{backgroundColor:"rgba(255, 255, 255, 0.1)",borderLeft:"3px solid #bcb6ff",paddingLeft:"8px",marginLeft:"-8px"}:{}};return/^\s*#/.test(i)?(0,o.jsx)("div",{...h({line:t}),style:c,children:t.map(((t,n)=>{const i=g({token:t});return(0,o.jsx)("span",{className:(e.language,"custom-highlight-comment"),children:i.children},n)}))},n):(0,o.jsx)("div",{...h({line:t}),style:c,children:t.map(((t,n)=>{const i=g({token:t});let s=i.children;if("bash"===e.language)return(0,o.jsx)("span",{style:{color:"#ffffff"},children:s},n);const h=[];let c,m=0;for(;null!==(c=l.exec(s));){if(c.index>m){let e=s.slice(m,c.index).replace(a,(e=>`<span class="${r[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),h.push(e)}h.push(`<span class="custom-highlight-yellow">${c[0]}</span>`),m=c.index+c[0].length}if(m<s.length){let e=s.slice(m).replace(a,(e=>`<span class="${r[e]}">${e}</span>`));e=e.replace(/\\b\\d+(?:\\.\\d+)?\\b/g,(e=>`<span class="custom-highlight-purple">${e}</span>`)),h.push(e)}const u=h.join("");if("string"==typeof s&&"prompt"===s.trim())return p++,1===p?(0,o.jsx)("span",{className:"custom-highlight-orange",children:s},n):2===p?(0,o.jsx)("span",{style:{color:"#fff"},children:s},n):(0,o.jsx)("span",{...i},n);if("string"==typeof s&&"audio_file"===s.trim())return v++,3===f&&2===v?(0,o.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,o.jsx)("span",{...i},n);if("string"==typeof s&&"state_saver"===s.trim())return j++,1===x&&1===j||2===x&&1===j||3===x&&2===j?(0,o.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,o.jsx)("span",{...i},n);if("string"==typeof s&&"db_config"===s.trim())return b++,1===y&&1===b||2===y&&1===b||3===y&&2===b?(0,o.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,o.jsx)("span",{...i},n);if("string"==typeof s&&"sql"===s.trim())return _++,1===_?(0,o.jsx)("span",{className:"custom-highlight-green",children:s},n):2===_||3===_?(0,o.jsx)("span",{className:"custom-highlight-orange",children:s},n):(0,o.jsx)("span",{...i},n);if("("===s||"{"===s||"["===s){w.push(s);const e=w.length,t=k(e);return"string"==typeof t?(0,o.jsx)("span",{className:t,children:s},n):(0,o.jsx)("span",{style:t,children:s},n)}if(")"===s||"}"===s||"]"===s){const e=w.length,t=k(e);let i;i="string"==typeof t?(0,o.jsx)("span",{className:t,children:s},n):(0,o.jsx)("span",{style:t,children:s},n);const h=w[w.length-1];return(")"===s&&"("===h||"}"===s&&"{"===h||"]"===s&&"["===h)&&w.pop(),i}return u!==s?(0,o.jsx)("span",{dangerouslySetInnerHTML:{__html:u}},n):(0,o.jsx)("span",{...i},n)}))},n)}))]})}})]})}},8453:(e,t,n)=>{n.d(t,{R:()=>h,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function h(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:h(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);